shader main {
    vertex {
        input vec3 position;
        input vec3 normal;
        output vec3 fragNormal;
        output vec3 fragPosition;

        void main() {
            fragNormal = normal;
            fragPosition = position;
            gl_Position = vec4(position, 1.0);
        }
    }

    fragment {
        input vec3 fragNormal;
        input vec3 fragPosition;
        uniform vec3 lightPos;
        uniform vec3 lightColor;
        output vec4 fragColor;

        void main() {
            vec3 norm = normalize(fragNormal);
            vec3 lightDir = normalize(lightPos - fragPosition);
            float diff = max(dot(norm, lightDir), 0.0);
            vec3 color = lightColor * diff;
            fragColor = vec4(color, 1.0);
        }
    }
}
