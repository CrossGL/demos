shader main {
vertex {
    input vec3 position;
    input vec3 normal;
    input vec2 texCoord;
    output vec3 fragPosition;
    output vec2 fragTexCoord;

    void main() {
        fragPosition = position;
        fragTexCoord = texCoord;
    }
}

fragment {
    input vec3 fragPosition;
    input vec2 fragTexCoord;
    output vec4 fragColor;

    void main() {
        vec3 norm = normalize(texture(normalMap, fragTexCoord) * 2.0 - 1.0);
        vec3 lightDir = normalize(lightPos - fragPosition);
        float diff = max(dot(norm, lightDir), 0.0);
        vec3 color = texture(texture, fragTexCoord) * diff;
        fragColor = vec4(color, 1.0);
    }
}
}