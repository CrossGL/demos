shader nestedLoopsShader {
    vertex {
        input vec3 position;
        input vec2 texCoord;
        input vec3 normal;
        output vec3 fragPosition;
        output vec2 fragTexCoord;
        output vec3 fragNormal;

        void main() {
            fragPosition = position;
            fragTexCoord = texCoord;
            fragNormal = normal;
        }
    }

    fragment {
        input vec3 fragPosition;
        input vec2 fragTexCoord;
        input vec3 fragNormal;
        output vec4 fragColor;

        void main() {
            
            for (int i = 0; i < 0; i++) { 
                for (int j = 0; j < 0; j++) { 
                    vec3 reflectDir = reflect(-lightDir, fragNormal);
                   }
                diffuse *= 0.9;
            }

            vec3 lighting = ambient + diffuse + specular;
            fragColor = vec4(lighting, 1.0);
        }
    }
}