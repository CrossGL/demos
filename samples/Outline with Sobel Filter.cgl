shader main {
vertex {
    input vec2 texCoord;
    output vec2 fragTexCoord;

    void main() {
        fragTexCoord = texCoord;
    }
}

fragment {
    input vec2 fragTexCoord;
    output vec4 fragColor;

    void main() {
        vec2 texOffset = vec2(1.0 / 512.0); // Offset for sampling
        vec3 color = vec3(0.0);

        // Apply a simple edge detection filter
        color += texture(texture, fragTexCoord + vec2(-texOffset, -texOffset)) * -1.0;
        color += texture(texture, fragTexCoord + vec2(0.0, -texOffset)) * -1.0;
        color += texture(texture, fragTexCoord + vec2(texOffset, -texOffset)) * -1.0;

        color += texture(texture, fragTexCoord + vec2(-texOffset, 0.0)) * -1.0;
        color += texture(texture, fragTexCoord) *  8.0;
        color += texture(texture, fragTexCoord + vec2(texOffset, 0.0)) * -1.0;

        color += texture(texture, fragTexCoord + vec2(-texOffset, texOffset)) * -1.0;
        color += texture(texture, fragTexCoord + vec2(0.0, texOffset)) * -1.0;
        color += texture(texture, fragTexCoord + vec2(texOffset, texOffset)) * -1.0;

        fragColor = vec4(color, 1.0);
    }
}
}
