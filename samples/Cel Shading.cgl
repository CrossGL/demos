shader main {
    vertex {
        input vec3 position;
        input vec3 normal;
        output vec4 color;

        vec3 celShading(vec3 normal, vec3 lightDir) {
            float inensity = dot(normal, lightDir);
            if (inensity > 0.95) {return vec3(1.0, 1.0, 1.0);}
            if (inensity > 0.5) {return vec3(0.8, 0.8, 0.8);}
            if (inensity > 0.25) {return vec3(0.6, 0.6, 0.6);}
            else {return vec3(0.4, 0.4, 0.4);}
        }

        void main() {
            vec3 norm = normalize(normal);
            vec3 lightDir = normalize(vec3(1.0, 1.0, 1.0) - position);
            vec3 shadingColor = celShading(norm, lightDir);

            color = vec4(shadingColor, 1.0); // Alpha channel
        }
    }

    fragment {
        input vec4 color;
        output vec4 fragColor;

        void main() {
            fragColor = color;
        }
    }
}
