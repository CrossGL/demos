shader main {
    vertex {
        input vec3 position;
        output vec4 color;

        // Pass through the position
        void main() {
            color = vec4(position, 1.0);
        }
    }

    fragment {
        input vec4 color; // This contains the position
        output vec4 fragColor;

        uniform vec3 cameraPos;
        uniform vec3 fogColor;
        uniform float fogDensity;

        void main() {
            vec3 position = color.xyz; // Extract the position
            float distance = length(position - cameraPos);
            float fogFactor = exp(-pow(distance * fogDensity, 2.0));
            vec3 finalColor = mix(fogColor, vec3(0.0, 0.5, 1.0), fogFactor);
            fragColor = vec4(finalColor, 1.0);
        }
    }
}
