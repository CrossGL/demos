shader main {
    vertex {
        input vec3 position;
        output vec3 passPosition;

        // Pass through the position
        void main() {
            passPosition = position;
        }
    }

    fragment {
        input vec3 passPosition; // This contains the position

        input vec3 cameraPos; // Simulated uniform
        input vec3 fogColor;  // Simulated uniform
        input float fogDensity; // Simulated uniform
        output vec4 fragColor;

        void main() {
            vec3 position = passPosition; // Extract the position
            float distance = length(position - cameraPos);
            float fogFactor = exp(-pow(distance * fogDensity, 2.0));
            vec3 finalColor = mix(fogColor, vec3(0.0, 0.5, 1.0), fogFactor);
            fragColor = vec4(finalColor, 1.0);
        }
    }
}
