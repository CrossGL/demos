shader main {
vertex {
    input vec2 texCoord;
    output vec2 fragTexCoord;

    void main() {
        fragTexCoord = texCoord;
    }
}

fragment {
    input vec2 fragTexCoord;
    output vec4 fragColor;

    void main() {
        vec2 texOffset = vec2(1.0 / 512.0);

        vec3 center = texture(texture, fragTexCoord);
        vec3 north = texture(texture, fragTexCoord + vec2(0.0, texOffset));
        vec3 south = texture(texture, fragTexCoord - vec2(0.0, texOffset));
        vec3 east = texture(texture, fragTexCoord + vec2(texOffset, 0.0));
        vec3 west = texture(texture, fragTexCoord - vec2(texOffset, 0.0));
        vec3 northwest = texture(texture, fragTexCoord + vec2(-texOffset, texOffset));
        vec3 northeast = texture(texture, fragTexCoord + vec2(texOffset, texOffset));
        vec3 southwest = texture(texture, fragTexCoord + vec2(-texOffset, -texOffset));
        vec3 southeast = texture(texture, fragTexCoord + vec2(texOffset, -texOffset));

        vec3 color = center * -1.0 +
                     north * -1.0 +
                     south * -1.0 +
                     east * -1.0 +
                     west * -1.0 +
                     northwest * 1.0 +
                     northeast * 1.0 +
                     southwest * 1.0 +
                     southeast * 1.0;

        fragColor = vec4(color + vec3(0.5), 1.0);
    }