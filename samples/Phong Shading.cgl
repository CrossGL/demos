shader main {
vertex {
    input vec3 position;
    input vec3 normal;
    output vec3 fragPosition;
    output vec3 fragNormal;

    void main() {
        fragPosition = position;
        fragNormal = normal;
    }
}

fragment {
    input vec3 fragPosition;
    input vec3 fragNormal;
    output vec4 fragColor;

    void main() {
        vec3 norm = normalize(fragNormal);
        vec3 lightDir = normalize(lightPos - fragPosition);
        float diff = max(dot(norm, lightDir), 0.0);
        vec3 reflectDir = reflect(-lightDir, norm);
        vec3 viewDir = normalize(viewPos - fragPosition);
        float spec = pow(max(dot(viewDir, reflectDir), 0.0), 32.0);
        vec3 color = vec3(0.5, 0.5, 0.5) + diff + spec;
        fragColor = vec4(color, 1.0);
    }
}
}