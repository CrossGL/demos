shader main {
    vertex {
        input vec3 position;
        input vec3 normal;
        // Simulated input for light position
        input vec3 lightPos;
        output vec4 color;

        
        void main() {
            // Pass the position and normal to the fragment shader
            color.xyz = position;
            color.w = 1.0; // Alpha channel
        }
    }

    fragment {
        input vec4 color; // This contains the position
        input vec3 normal; // Pass the normal directly
         // Simulated input for light position
        input vec3 lightPos;
        output vec4 fragColor;

       

        void main() {
            vec3 pos = color.xyz; // Extract position
            vec3 norm = normalize(normal);
            vec3 lightDir = normalize(lightPos - pos);
            float diff = max(dot(norm, lightDir), 0.0);
            vec3 color = vec3(0.5, 0.5, 0.5) * diff;
            fragColor = vec4(color, 1.0);
        }
    }
}
