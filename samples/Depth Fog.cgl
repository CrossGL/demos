shader main {
    vertex {
        input vec3 position;
        input vec3 normal;
        input vec2 texCoord;
        output vec2 passTexCoord;
        output float passDepth;

        void main() {
            passTexCoord = texCoord;
            passDepth = length(position);
        }
    }

    fragment {
        input vec2 passTexCoord;
        input float passDepth;
        // Simulated input values
        input float texture;
        input float fogDensity;
        input vec3 fogColor;
        output vec4 fragColor;

        // Simulated texture function
        vec4 get_texture(float tex, vec2 coord) {
            return vec4(coord.x, coord.y, 0.5, 1.0);
        }

        void main() {
            vec3 baseColor = get_texture(texture, passTexCoord);
            float fogFactor = exp(-fogDensity * passDepth);
            vec3 finalColor = mix(fogColor, baseColor.rgb, fogFactor);

            fragColor = vec4(finalColor, 1.0);
        }
    }
}
