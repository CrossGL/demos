shader main {
    vertex {
        input vec2 texCoord;
        output vec4 color;

        // No calculations needed in the vertex shader for this effect
        void main() {
            // Pass through the texture coordinate
            color = vec4(texCoord, 0.0, 1.0);
        }
    }

    fragment {
        input vec4 color; // This contains the texture coordinate
        output vec4 fragColor;

        uniform sampler2D texture;

        void main() {
            vec2 texCoord = color.xy; // Extract the texture coordinate
            vec2 offset = vec2(1.0 / 512.0, 1.0 / 512.0);
            vec3 color = texture(texture, texCoord).rgb;
            vec3 colorRight = texture(texture, texCoord + vec2(offset.x, 0.0)).rgb;
            vec3 colorUp = texture(texture, texCoord + vec2(0.0, offset.y)).rgb;

            vec3 edge = abs(color - colorRight) + abs(color - colorUp);
            fragColor = vec4(edge, 1.0);
        }
    }
}
